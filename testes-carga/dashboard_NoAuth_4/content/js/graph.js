/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 30081.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 3.0], [1.5, 3.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 6.0], [6.3, 6.0], [6.4, 6.0], [6.5, 6.0], [6.6, 6.0], [6.7, 6.0], [6.8, 6.0], [6.9, 6.0], [7.0, 6.0], [7.1, 6.0], [7.2, 6.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 9.0], [11.2, 9.0], [11.3, 9.0], [11.4, 9.0], [11.5, 9.0], [11.6, 9.0], [11.7, 9.0], [11.8, 9.0], [11.9, 9.0], [12.0, 9.0], [12.1, 9.0], [12.2, 9.0], [12.3, 10.0], [12.4, 10.0], [12.5, 10.0], [12.6, 10.0], [12.7, 10.0], [12.8, 10.0], [12.9, 10.0], [13.0, 10.0], [13.1, 10.0], [13.2, 10.0], [13.3, 10.0], [13.4, 11.0], [13.5, 11.0], [13.6, 11.0], [13.7, 11.0], [13.8, 11.0], [13.9, 11.0], [14.0, 11.0], [14.1, 11.0], [14.2, 12.0], [14.3, 12.0], [14.4, 12.0], [14.5, 12.0], [14.6, 12.0], [14.7, 12.0], [14.8, 12.0], [14.9, 12.0], [15.0, 13.0], [15.1, 13.0], [15.2, 13.0], [15.3, 13.0], [15.4, 13.0], [15.5, 13.0], [15.6, 13.0], [15.7, 13.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 15.0], [16.6, 15.0], [16.7, 15.0], [16.8, 15.0], [16.9, 15.0], [17.0, 15.0], [17.1, 16.0], [17.2, 16.0], [17.3, 16.0], [17.4, 16.0], [17.5, 16.0], [17.6, 17.0], [17.7, 17.0], [17.8, 17.0], [17.9, 17.0], [18.0, 17.0], [18.1, 18.0], [18.2, 18.0], [18.3, 18.0], [18.4, 18.0], [18.5, 18.0], [18.6, 18.0], [18.7, 18.0], [18.8, 19.0], [18.9, 19.0], [19.0, 19.0], [19.1, 19.0], [19.2, 19.0], [19.3, 20.0], [19.4, 20.0], [19.5, 20.0], [19.6, 20.0], [19.7, 20.0], [19.8, 21.0], [19.9, 21.0], [20.0, 21.0], [20.1, 21.0], [20.2, 22.0], [20.3, 22.0], [20.4, 22.0], [20.5, 22.0], [20.6, 22.0], [20.7, 23.0], [20.8, 23.0], [20.9, 23.0], [21.0, 23.0], [21.1, 24.0], [21.2, 24.0], [21.3, 24.0], [21.4, 24.0], [21.5, 25.0], [21.6, 25.0], [21.7, 25.0], [21.8, 25.0], [21.9, 25.0], [22.0, 26.0], [22.1, 26.0], [22.2, 26.0], [22.3, 26.0], [22.4, 26.0], [22.5, 27.0], [22.6, 27.0], [22.7, 27.0], [22.8, 27.0], [22.9, 28.0], [23.0, 28.0], [23.1, 28.0], [23.2, 29.0], [23.3, 29.0], [23.4, 29.0], [23.5, 29.0], [23.6, 29.0], [23.7, 30.0], [23.8, 30.0], [23.9, 30.0], [24.0, 30.0], [24.1, 31.0], [24.2, 31.0], [24.3, 31.0], [24.4, 31.0], [24.5, 32.0], [24.6, 32.0], [24.7, 32.0], [24.8, 32.0], [24.9, 33.0], [25.0, 33.0], [25.1, 33.0], [25.2, 34.0], [25.3, 34.0], [25.4, 34.0], [25.5, 34.0], [25.6, 35.0], [25.7, 35.0], [25.8, 36.0], [25.9, 36.0], [26.0, 36.0], [26.1, 36.0], [26.2, 36.0], [26.3, 37.0], [26.4, 37.0], [26.5, 37.0], [26.6, 37.0], [26.7, 38.0], [26.8, 38.0], [26.9, 38.0], [27.0, 38.0], [27.1, 39.0], [27.2, 39.0], [27.3, 40.0], [27.4, 40.0], [27.5, 40.0], [27.6, 41.0], [27.7, 41.0], [27.8, 41.0], [27.9, 42.0], [28.0, 42.0], [28.1, 42.0], [28.2, 43.0], [28.3, 43.0], [28.4, 43.0], [28.5, 44.0], [28.6, 44.0], [28.7, 45.0], [28.8, 45.0], [28.9, 45.0], [29.0, 46.0], [29.1, 46.0], [29.2, 47.0], [29.3, 47.0], [29.4, 47.0], [29.5, 48.0], [29.6, 48.0], [29.7, 49.0], [29.8, 49.0], [29.9, 50.0], [30.0, 50.0], [30.1, 51.0], [30.2, 51.0], [30.3, 52.0], [30.4, 52.0], [30.5, 52.0], [30.6, 53.0], [30.7, 53.0], [30.8, 54.0], [30.9, 54.0], [31.0, 55.0], [31.1, 55.0], [31.2, 56.0], [31.3, 56.0], [31.4, 57.0], [31.5, 57.0], [31.6, 58.0], [31.7, 59.0], [31.8, 59.0], [31.9, 60.0], [32.0, 60.0], [32.1, 61.0], [32.2, 61.0], [32.3, 61.0], [32.4, 62.0], [32.5, 62.0], [32.6, 62.0], [32.7, 63.0], [32.8, 64.0], [32.9, 64.0], [33.0, 65.0], [33.1, 65.0], [33.2, 66.0], [33.3, 66.0], [33.4, 67.0], [33.5, 67.0], [33.6, 68.0], [33.7, 68.0], [33.8, 69.0], [33.9, 69.0], [34.0, 70.0], [34.1, 71.0], [34.2, 71.0], [34.3, 72.0], [34.4, 72.0], [34.5, 73.0], [34.6, 73.0], [34.7, 74.0], [34.8, 75.0], [34.9, 75.0], [35.0, 76.0], [35.1, 76.0], [35.2, 77.0], [35.3, 78.0], [35.4, 78.0], [35.5, 79.0], [35.6, 79.0], [35.7, 79.0], [35.8, 80.0], [35.9, 80.0], [36.0, 81.0], [36.1, 81.0], [36.2, 82.0], [36.3, 83.0], [36.4, 83.0], [36.5, 84.0], [36.6, 84.0], [36.7, 85.0], [36.8, 85.0], [36.9, 86.0], [37.0, 86.0], [37.1, 87.0], [37.2, 87.0], [37.3, 88.0], [37.4, 89.0], [37.5, 89.0], [37.6, 90.0], [37.7, 91.0], [37.8, 92.0], [37.9, 93.0], [38.0, 93.0], [38.1, 94.0], [38.2, 95.0], [38.3, 95.0], [38.4, 96.0], [38.5, 97.0], [38.6, 98.0], [38.7, 98.0], [38.8, 99.0], [38.9, 100.0], [39.0, 100.0], [39.1, 101.0], [39.2, 102.0], [39.3, 103.0], [39.4, 104.0], [39.5, 105.0], [39.6, 106.0], [39.7, 107.0], [39.8, 108.0], [39.9, 108.0], [40.0, 109.0], [40.1, 110.0], [40.2, 111.0], [40.3, 112.0], [40.4, 112.0], [40.5, 113.0], [40.6, 114.0], [40.7, 114.0], [40.8, 115.0], [40.9, 115.0], [41.0, 116.0], [41.1, 117.0], [41.2, 118.0], [41.3, 119.0], [41.4, 120.0], [41.5, 120.0], [41.6, 121.0], [41.7, 122.0], [41.8, 122.0], [41.9, 123.0], [42.0, 124.0], [42.1, 124.0], [42.2, 125.0], [42.3, 126.0], [42.4, 127.0], [42.5, 127.0], [42.6, 128.0], [42.7, 129.0], [42.8, 130.0], [42.9, 131.0], [43.0, 132.0], [43.1, 133.0], [43.2, 134.0], [43.3, 134.0], [43.4, 136.0], [43.5, 137.0], [43.6, 138.0], [43.7, 138.0], [43.8, 139.0], [43.9, 140.0], [44.0, 141.0], [44.1, 141.0], [44.2, 143.0], [44.3, 143.0], [44.4, 144.0], [44.5, 146.0], [44.6, 147.0], [44.7, 148.0], [44.8, 148.0], [44.9, 149.0], [45.0, 150.0], [45.1, 151.0], [45.2, 151.0], [45.3, 152.0], [45.4, 153.0], [45.5, 154.0], [45.6, 155.0], [45.7, 156.0], [45.8, 158.0], [45.9, 159.0], [46.0, 160.0], [46.1, 161.0], [46.2, 163.0], [46.3, 163.0], [46.4, 164.0], [46.5, 165.0], [46.6, 166.0], [46.7, 167.0], [46.8, 167.0], [46.9, 169.0], [47.0, 170.0], [47.1, 170.0], [47.2, 171.0], [47.3, 172.0], [47.4, 173.0], [47.5, 174.0], [47.6, 175.0], [47.7, 176.0], [47.8, 177.0], [47.9, 178.0], [48.0, 179.0], [48.1, 180.0], [48.2, 181.0], [48.3, 182.0], [48.4, 183.0], [48.5, 183.0], [48.6, 184.0], [48.7, 186.0], [48.8, 187.0], [48.9, 188.0], [49.0, 189.0], [49.1, 190.0], [49.2, 191.0], [49.3, 191.0], [49.4, 192.0], [49.5, 193.0], [49.6, 194.0], [49.7, 195.0], [49.8, 197.0], [49.9, 198.0], [50.0, 199.0], [50.1, 199.0], [50.2, 200.0], [50.3, 201.0], [50.4, 203.0], [50.5, 203.0], [50.6, 205.0], [50.7, 205.0], [50.8, 207.0], [50.9, 208.0], [51.0, 209.0], [51.1, 211.0], [51.2, 212.0], [51.3, 213.0], [51.4, 214.0], [51.5, 216.0], [51.6, 217.0], [51.7, 217.0], [51.8, 218.0], [51.9, 219.0], [52.0, 220.0], [52.1, 221.0], [52.2, 222.0], [52.3, 223.0], [52.4, 224.0], [52.5, 225.0], [52.6, 226.0], [52.7, 227.0], [52.8, 228.0], [52.9, 229.0], [53.0, 230.0], [53.1, 231.0], [53.2, 232.0], [53.3, 235.0], [53.4, 236.0], [53.5, 237.0], [53.6, 238.0], [53.7, 239.0], [53.8, 240.0], [53.9, 242.0], [54.0, 243.0], [54.1, 244.0], [54.2, 246.0], [54.3, 247.0], [54.4, 248.0], [54.5, 249.0], [54.6, 250.0], [54.7, 251.0], [54.8, 251.0], [54.9, 252.0], [55.0, 253.0], [55.1, 254.0], [55.2, 255.0], [55.3, 256.0], [55.4, 257.0], [55.5, 258.0], [55.6, 259.0], [55.7, 260.0], [55.8, 261.0], [55.9, 262.0], [56.0, 262.0], [56.1, 264.0], [56.2, 265.0], [56.3, 267.0], [56.4, 268.0], [56.5, 269.0], [56.6, 270.0], [56.7, 272.0], [56.8, 273.0], [56.9, 274.0], [57.0, 276.0], [57.1, 277.0], [57.2, 279.0], [57.3, 280.0], [57.4, 281.0], [57.5, 282.0], [57.6, 283.0], [57.7, 284.0], [57.8, 285.0], [57.9, 286.0], [58.0, 287.0], [58.1, 289.0], [58.2, 290.0], [58.3, 292.0], [58.4, 292.0], [58.5, 293.0], [58.6, 294.0], [58.7, 295.0], [58.8, 296.0], [58.9, 297.0], [59.0, 298.0], [59.1, 298.0], [59.2, 300.0], [59.3, 300.0], [59.4, 301.0], [59.5, 303.0], [59.6, 304.0], [59.7, 305.0], [59.8, 306.0], [59.9, 307.0], [60.0, 308.0], [60.1, 310.0], [60.2, 312.0], [60.3, 313.0], [60.4, 313.0], [60.5, 314.0], [60.6, 315.0], [60.7, 317.0], [60.8, 318.0], [60.9, 319.0], [61.0, 320.0], [61.1, 321.0], [61.2, 323.0], [61.3, 324.0], [61.4, 325.0], [61.5, 326.0], [61.6, 327.0], [61.7, 328.0], [61.8, 329.0], [61.9, 330.0], [62.0, 331.0], [62.1, 332.0], [62.2, 333.0], [62.3, 334.0], [62.4, 335.0], [62.5, 337.0], [62.6, 338.0], [62.7, 339.0], [62.8, 340.0], [62.9, 341.0], [63.0, 342.0], [63.1, 343.0], [63.2, 344.0], [63.3, 345.0], [63.4, 346.0], [63.5, 347.0], [63.6, 348.0], [63.7, 349.0], [63.8, 351.0], [63.9, 352.0], [64.0, 354.0], [64.1, 356.0], [64.2, 357.0], [64.3, 358.0], [64.4, 359.0], [64.5, 360.0], [64.6, 361.0], [64.7, 363.0], [64.8, 364.0], [64.9, 365.0], [65.0, 366.0], [65.1, 368.0], [65.2, 369.0], [65.3, 371.0], [65.4, 373.0], [65.5, 375.0], [65.6, 376.0], [65.7, 377.0], [65.8, 378.0], [65.9, 380.0], [66.0, 381.0], [66.1, 382.0], [66.2, 384.0], [66.3, 385.0], [66.4, 387.0], [66.5, 388.0], [66.6, 389.0], [66.7, 391.0], [66.8, 392.0], [66.9, 393.0], [67.0, 394.0], [67.1, 395.0], [67.2, 396.0], [67.3, 397.0], [67.4, 398.0], [67.5, 399.0], [67.6, 400.0], [67.7, 401.0], [67.8, 402.0], [67.9, 403.0], [68.0, 405.0], [68.1, 406.0], [68.2, 407.0], [68.3, 409.0], [68.4, 410.0], [68.5, 411.0], [68.6, 412.0], [68.7, 414.0], [68.8, 415.0], [68.9, 417.0], [69.0, 418.0], [69.1, 420.0], [69.2, 421.0], [69.3, 422.0], [69.4, 423.0], [69.5, 425.0], [69.6, 427.0], [69.7, 428.0], [69.8, 429.0], [69.9, 432.0], [70.0, 433.0], [70.1, 434.0], [70.2, 435.0], [70.3, 436.0], [70.4, 438.0], [70.5, 440.0], [70.6, 441.0], [70.7, 442.0], [70.8, 444.0], [70.9, 445.0], [71.0, 446.0], [71.1, 447.0], [71.2, 448.0], [71.3, 449.0], [71.4, 451.0], [71.5, 453.0], [71.6, 454.0], [71.7, 455.0], [71.8, 457.0], [71.9, 458.0], [72.0, 458.0], [72.1, 459.0], [72.2, 461.0], [72.3, 462.0], [72.4, 464.0], [72.5, 465.0], [72.6, 467.0], [72.7, 468.0], [72.8, 470.0], [72.9, 471.0], [73.0, 472.0], [73.1, 475.0], [73.2, 475.0], [73.3, 478.0], [73.4, 480.0], [73.5, 481.0], [73.6, 483.0], [73.7, 484.0], [73.8, 485.0], [73.9, 487.0], [74.0, 488.0], [74.1, 490.0], [74.2, 491.0], [74.3, 493.0], [74.4, 495.0], [74.5, 496.0], [74.6, 498.0], [74.7, 500.0], [74.8, 501.0], [74.9, 503.0], [75.0, 504.0], [75.1, 506.0], [75.2, 508.0], [75.3, 510.0], [75.4, 512.0], [75.5, 514.0], [75.6, 516.0], [75.7, 517.0], [75.8, 519.0], [75.9, 520.0], [76.0, 521.0], [76.1, 522.0], [76.2, 523.0], [76.3, 524.0], [76.4, 526.0], [76.5, 527.0], [76.6, 529.0], [76.7, 531.0], [76.8, 532.0], [76.9, 533.0], [77.0, 535.0], [77.1, 536.0], [77.2, 539.0], [77.3, 540.0], [77.4, 542.0], [77.5, 544.0], [77.6, 546.0], [77.7, 548.0], [77.8, 550.0], [77.9, 552.0], [78.0, 553.0], [78.1, 554.0], [78.2, 556.0], [78.3, 560.0], [78.4, 561.0], [78.5, 563.0], [78.6, 564.0], [78.7, 567.0], [78.8, 569.0], [78.9, 571.0], [79.0, 572.0], [79.1, 574.0], [79.2, 577.0], [79.3, 578.0], [79.4, 581.0], [79.5, 582.0], [79.6, 584.0], [79.7, 586.0], [79.8, 587.0], [79.9, 590.0], [80.0, 591.0], [80.1, 595.0], [80.2, 596.0], [80.3, 600.0], [80.4, 601.0], [80.5, 602.0], [80.6, 605.0], [80.7, 607.0], [80.8, 608.0], [80.9, 610.0], [81.0, 611.0], [81.1, 612.0], [81.2, 615.0], [81.3, 617.0], [81.4, 619.0], [81.5, 621.0], [81.6, 622.0], [81.7, 624.0], [81.8, 626.0], [81.9, 629.0], [82.0, 631.0], [82.1, 633.0], [82.2, 635.0], [82.3, 636.0], [82.4, 638.0], [82.5, 640.0], [82.6, 645.0], [82.7, 646.0], [82.8, 648.0], [82.9, 651.0], [83.0, 654.0], [83.1, 656.0], [83.2, 658.0], [83.3, 661.0], [83.4, 663.0], [83.5, 666.0], [83.6, 667.0], [83.7, 670.0], [83.8, 672.0], [83.9, 673.0], [84.0, 675.0], [84.1, 677.0], [84.2, 678.0], [84.3, 680.0], [84.4, 682.0], [84.5, 683.0], [84.6, 686.0], [84.7, 689.0], [84.8, 691.0], [84.9, 694.0], [85.0, 697.0], [85.1, 699.0], [85.2, 702.0], [85.3, 704.0], [85.4, 707.0], [85.5, 709.0], [85.6, 712.0], [85.7, 714.0], [85.8, 716.0], [85.9, 719.0], [86.0, 721.0], [86.1, 724.0], [86.2, 727.0], [86.3, 730.0], [86.4, 732.0], [86.5, 735.0], [86.6, 738.0], [86.7, 741.0], [86.8, 745.0], [86.9, 747.0], [87.0, 749.0], [87.1, 750.0], [87.2, 753.0], [87.3, 755.0], [87.4, 760.0], [87.5, 763.0], [87.6, 765.0], [87.7, 768.0], [87.8, 770.0], [87.9, 774.0], [88.0, 777.0], [88.1, 779.0], [88.2, 781.0], [88.3, 784.0], [88.4, 787.0], [88.5, 789.0], [88.6, 793.0], [88.7, 795.0], [88.8, 799.0], [88.9, 803.0], [89.0, 806.0], [89.1, 810.0], [89.2, 813.0], [89.3, 816.0], [89.4, 821.0], [89.5, 822.0], [89.6, 826.0], [89.7, 829.0], [89.8, 832.0], [89.9, 837.0], [90.0, 841.0], [90.1, 843.0], [90.2, 846.0], [90.3, 849.0], [90.4, 852.0], [90.5, 855.0], [90.6, 859.0], [90.7, 865.0], [90.8, 868.0], [90.9, 872.0], [91.0, 874.0], [91.1, 876.0], [91.2, 880.0], [91.3, 882.0], [91.4, 884.0], [91.5, 889.0], [91.6, 893.0], [91.7, 899.0], [91.8, 901.0], [91.9, 903.0], [92.0, 907.0], [92.1, 912.0], [92.2, 915.0], [92.3, 918.0], [92.4, 922.0], [92.5, 928.0], [92.6, 934.0], [92.7, 938.0], [92.8, 941.0], [92.9, 944.0], [93.0, 950.0], [93.1, 958.0], [93.2, 964.0], [93.3, 966.0], [93.4, 970.0], [93.5, 975.0], [93.6, 980.0], [93.7, 983.0], [93.8, 987.0], [93.9, 991.0], [94.0, 997.0], [94.1, 1000.0], [94.2, 1007.0], [94.3, 1012.0], [94.4, 1016.0], [94.5, 1022.0], [94.6, 1034.0], [94.7, 1041.0], [94.8, 1046.0], [94.9, 1053.0], [95.0, 1058.0], [95.1, 1065.0], [95.2, 1071.0], [95.3, 1078.0], [95.4, 1087.0], [95.5, 1093.0], [95.6, 1103.0], [95.7, 1107.0], [95.8, 1111.0], [95.9, 1118.0], [96.0, 1125.0], [96.1, 1134.0], [96.2, 1143.0], [96.3, 1148.0], [96.4, 1156.0], [96.5, 1163.0], [96.6, 1171.0], [96.7, 1180.0], [96.8, 1187.0], [96.9, 1195.0], [97.0, 1199.0], [97.1, 1214.0], [97.2, 1228.0], [97.3, 1241.0], [97.4, 1251.0], [97.5, 1261.0], [97.6, 1276.0], [97.7, 1290.0], [97.8, 1302.0], [97.9, 1321.0], [98.0, 1330.0], [98.1, 1349.0], [98.2, 1375.0], [98.3, 1391.0], [98.4, 1420.0], [98.5, 1454.0], [98.6, 1477.0], [98.7, 1520.0], [98.8, 1561.0], [98.9, 1614.0], [99.0, 1686.0], [99.1, 1750.0], [99.2, 1833.0], [99.3, 30006.0], [99.4, 30010.0], [99.5, 30013.0], [99.6, 30016.0], [99.7, 30022.0], [99.8, 30032.0], [99.9, 30042.0], [100.0, 30081.0]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 6.0], [34.9, 6.0], [35.0, 6.0], [35.1, 6.0], [35.2, 6.0], [35.3, 6.0], [35.4, 6.0], [35.5, 6.0], [35.6, 6.0], [35.7, 6.0], [35.8, 6.0], [35.9, 6.0], [36.0, 6.0], [36.1, 6.0], [36.2, 6.0], [36.3, 6.0], [36.4, 6.0], [36.5, 6.0], [36.6, 6.0], [36.7, 6.0], [36.8, 6.0], [36.9, 6.0], [37.0, 6.0], [37.1, 6.0], [37.2, 6.0], [37.3, 6.0], [37.4, 6.0], [37.5, 6.0], [37.6, 6.0], [37.7, 6.0], [37.8, 6.0], [37.9, 6.0], [38.0, 6.0], [38.1, 6.0], [38.2, 6.0], [38.3, 6.0], [38.4, 7.0], [38.5, 7.0], [38.6, 7.0], [38.7, 7.0], [38.8, 7.0], [38.9, 7.0], [39.0, 7.0], [39.1, 7.0], [39.2, 7.0], [39.3, 7.0], [39.4, 7.0], [39.5, 7.0], [39.6, 7.0], [39.7, 7.0], [39.8, 7.0], [39.9, 7.0], [40.0, 7.0], [40.1, 7.0], [40.2, 7.0], [40.3, 7.0], [40.4, 8.0], [40.5, 8.0], [40.6, 8.0], [40.7, 8.0], [40.8, 8.0], [40.9, 8.0], [41.0, 8.0], [41.1, 8.0], [41.2, 8.0], [41.3, 8.0], [41.4, 8.0], [41.5, 8.0], [41.6, 8.0], [41.7, 8.0], [41.8, 8.0], [41.9, 8.0], [42.0, 8.0], [42.1, 9.0], [42.2, 9.0], [42.3, 9.0], [42.4, 9.0], [42.5, 9.0], [42.6, 9.0], [42.7, 9.0], [42.8, 9.0], [42.9, 9.0], [43.0, 9.0], [43.1, 9.0], [43.2, 9.0], [43.3, 9.0], [43.4, 9.0], [43.5, 9.0], [43.6, 9.0], [43.7, 10.0], [43.8, 10.0], [43.9, 10.0], [44.0, 10.0], [44.1, 10.0], [44.2, 10.0], [44.3, 10.0], [44.4, 10.0], [44.5, 10.0], [44.6, 10.0], [44.7, 10.0], [44.8, 11.0], [44.9, 11.0], [45.0, 11.0], [45.1, 11.0], [45.2, 11.0], [45.3, 11.0], [45.4, 11.0], [45.5, 11.0], [45.6, 11.0], [45.7, 11.0], [45.8, 12.0], [45.9, 12.0], [46.0, 12.0], [46.1, 12.0], [46.2, 12.0], [46.3, 12.0], [46.4, 12.0], [46.5, 13.0], [46.6, 13.0], [46.7, 13.0], [46.8, 13.0], [46.9, 13.0], [47.0, 13.0], [47.1, 14.0], [47.2, 14.0], [47.3, 14.0], [47.4, 14.0], [47.5, 14.0], [47.6, 15.0], [47.7, 15.0], [47.8, 15.0], [47.9, 15.0], [48.0, 15.0], [48.1, 16.0], [48.2, 16.0], [48.3, 16.0], [48.4, 16.0], [48.5, 16.0], [48.6, 17.0], [48.7, 17.0], [48.8, 17.0], [48.9, 17.0], [49.0, 17.0], [49.1, 18.0], [49.2, 18.0], [49.3, 18.0], [49.4, 18.0], [49.5, 19.0], [49.6, 19.0], [49.7, 19.0], [49.8, 19.0], [49.9, 19.0], [50.0, 20.0], [50.1, 20.0], [50.2, 20.0], [50.3, 20.0], [50.4, 21.0], [50.5, 21.0], [50.6, 21.0], [50.7, 22.0], [50.8, 22.0], [50.9, 22.0], [51.0, 22.0], [51.1, 23.0], [51.2, 23.0], [51.3, 23.0], [51.4, 24.0], [51.5, 24.0], [51.6, 24.0], [51.7, 24.0], [51.8, 25.0], [51.9, 25.0], [52.0, 25.0], [52.1, 26.0], [52.2, 26.0], [52.3, 26.0], [52.4, 27.0], [52.5, 27.0], [52.6, 27.0], [52.7, 28.0], [52.8, 28.0], [52.9, 28.0], [53.0, 29.0], [53.1, 29.0], [53.2, 29.0], [53.3, 29.0], [53.4, 30.0], [53.5, 30.0], [53.6, 30.0], [53.7, 31.0], [53.8, 31.0], [53.9, 32.0], [54.0, 32.0], [54.1, 32.0], [54.2, 33.0], [54.3, 33.0], [54.4, 33.0], [54.5, 34.0], [54.6, 34.0], [54.7, 35.0], [54.8, 35.0], [54.9, 36.0], [55.0, 36.0], [55.1, 37.0], [55.2, 37.0], [55.3, 37.0], [55.4, 38.0], [55.5, 39.0], [55.6, 39.0], [55.7, 40.0], [55.8, 40.0], [55.9, 40.0], [56.0, 41.0], [56.1, 42.0], [56.2, 42.0], [56.3, 43.0], [56.4, 43.0], [56.5, 44.0], [56.6, 44.0], [56.7, 44.0], [56.8, 45.0], [56.9, 45.0], [57.0, 46.0], [57.1, 46.0], [57.2, 47.0], [57.3, 47.0], [57.4, 47.0], [57.5, 48.0], [57.6, 49.0], [57.7, 49.0], [57.8, 50.0], [57.9, 50.0], [58.0, 51.0], [58.1, 51.0], [58.2, 52.0], [58.3, 52.0], [58.4, 53.0], [58.5, 54.0], [58.6, 54.0], [58.7, 55.0], [58.8, 56.0], [58.9, 57.0], [59.0, 58.0], [59.1, 59.0], [59.2, 60.0], [59.3, 60.0], [59.4, 61.0], [59.5, 62.0], [59.6, 62.0], [59.7, 63.0], [59.8, 64.0], [59.9, 64.0], [60.0, 65.0], [60.1, 65.0], [60.2, 66.0], [60.3, 67.0], [60.4, 67.0], [60.5, 68.0], [60.6, 69.0], [60.7, 69.0], [60.8, 70.0], [60.9, 71.0], [61.0, 72.0], [61.1, 73.0], [61.2, 74.0], [61.3, 74.0], [61.4, 76.0], [61.5, 77.0], [61.6, 78.0], [61.7, 79.0], [61.8, 80.0], [61.9, 81.0], [62.0, 82.0], [62.1, 83.0], [62.2, 85.0], [62.3, 86.0], [62.4, 87.0], [62.5, 89.0], [62.6, 90.0], [62.7, 91.0], [62.8, 93.0], [62.9, 93.0], [63.0, 95.0], [63.1, 96.0], [63.2, 98.0], [63.3, 99.0], [63.4, 101.0], [63.5, 102.0], [63.6, 103.0], [63.7, 105.0], [63.8, 106.0], [63.9, 107.0], [64.0, 109.0], [64.1, 111.0], [64.2, 112.0], [64.3, 114.0], [64.4, 115.0], [64.5, 116.0], [64.6, 117.0], [64.7, 119.0], [64.8, 121.0], [64.9, 123.0], [65.0, 124.0], [65.1, 125.0], [65.2, 128.0], [65.3, 129.0], [65.4, 131.0], [65.5, 133.0], [65.6, 135.0], [65.7, 136.0], [65.8, 138.0], [65.9, 140.0], [66.0, 142.0], [66.1, 143.0], [66.2, 144.0], [66.3, 146.0], [66.4, 148.0], [66.5, 150.0], [66.6, 151.0], [66.7, 154.0], [66.8, 155.0], [66.9, 156.0], [67.0, 158.0], [67.1, 160.0], [67.2, 162.0], [67.3, 164.0], [67.4, 166.0], [67.5, 168.0], [67.6, 170.0], [67.7, 173.0], [67.8, 174.0], [67.9, 177.0], [68.0, 179.0], [68.1, 181.0], [68.2, 183.0], [68.3, 184.0], [68.4, 186.0], [68.5, 188.0], [68.6, 189.0], [68.7, 190.0], [68.8, 191.0], [68.9, 192.0], [69.0, 194.0], [69.1, 196.0], [69.2, 198.0], [69.3, 201.0], [69.4, 202.0], [69.5, 204.0], [69.6, 206.0], [69.7, 210.0], [69.8, 212.0], [69.9, 215.0], [70.0, 219.0], [70.1, 221.0], [70.2, 223.0], [70.3, 226.0], [70.4, 228.0], [70.5, 230.0], [70.6, 233.0], [70.7, 234.0], [70.8, 237.0], [70.9, 241.0], [71.0, 243.0], [71.1, 246.0], [71.2, 247.0], [71.3, 250.0], [71.4, 254.0], [71.5, 257.0], [71.6, 259.0], [71.7, 261.0], [71.8, 263.0], [71.9, 265.0], [72.0, 267.0], [72.1, 269.0], [72.2, 271.0], [72.3, 273.0], [72.4, 275.0], [72.5, 278.0], [72.6, 280.0], [72.7, 283.0], [72.8, 286.0], [72.9, 288.0], [73.0, 291.0], [73.1, 293.0], [73.2, 294.0], [73.3, 296.0], [73.4, 299.0], [73.5, 302.0], [73.6, 303.0], [73.7, 306.0], [73.8, 310.0], [73.9, 311.0], [74.0, 313.0], [74.1, 315.0], [74.2, 316.0], [74.3, 317.0], [74.4, 320.0], [74.5, 322.0], [74.6, 325.0], [74.7, 326.0], [74.8, 328.0], [74.9, 330.0], [75.0, 332.0], [75.1, 334.0], [75.2, 336.0], [75.3, 338.0], [75.4, 340.0], [75.5, 342.0], [75.6, 345.0], [75.7, 349.0], [75.8, 352.0], [75.9, 355.0], [76.0, 358.0], [76.1, 362.0], [76.2, 363.0], [76.3, 366.0], [76.4, 369.0], [76.5, 370.0], [76.6, 373.0], [76.7, 377.0], [76.8, 379.0], [76.9, 383.0], [77.0, 386.0], [77.1, 389.0], [77.2, 390.0], [77.3, 393.0], [77.4, 395.0], [77.5, 397.0], [77.6, 400.0], [77.7, 402.0], [77.8, 404.0], [77.9, 406.0], [78.0, 409.0], [78.1, 411.0], [78.2, 413.0], [78.3, 416.0], [78.4, 419.0], [78.5, 422.0], [78.6, 426.0], [78.7, 428.0], [78.8, 430.0], [78.9, 433.0], [79.0, 436.0], [79.1, 439.0], [79.2, 440.0], [79.3, 443.0], [79.4, 445.0], [79.5, 447.0], [79.6, 449.0], [79.7, 451.0], [79.8, 453.0], [79.9, 457.0], [80.0, 460.0], [80.1, 462.0], [80.2, 464.0], [80.3, 467.0], [80.4, 471.0], [80.5, 472.0], [80.6, 475.0], [80.7, 479.0], [80.8, 483.0], [80.9, 485.0], [81.0, 488.0], [81.1, 490.0], [81.2, 493.0], [81.3, 494.0], [81.4, 498.0], [81.5, 501.0], [81.6, 504.0], [81.7, 507.0], [81.8, 510.0], [81.9, 512.0], [82.0, 514.0], [82.1, 516.0], [82.2, 519.0], [82.3, 521.0], [82.4, 523.0], [82.5, 525.0], [82.6, 529.0], [82.7, 531.0], [82.8, 534.0], [82.9, 537.0], [83.0, 540.0], [83.1, 542.0], [83.2, 544.0], [83.3, 547.0], [83.4, 550.0], [83.5, 554.0], [83.6, 556.0], [83.7, 559.0], [83.8, 562.0], [83.9, 565.0], [84.0, 568.0], [84.1, 570.0], [84.2, 574.0], [84.3, 578.0], [84.4, 581.0], [84.5, 584.0], [84.6, 586.0], [84.7, 591.0], [84.8, 594.0], [84.9, 597.0], [85.0, 600.0], [85.1, 602.0], [85.2, 605.0], [85.3, 607.0], [85.4, 611.0], [85.5, 614.0], [85.6, 617.0], [85.7, 620.0], [85.8, 624.0], [85.9, 627.0], [86.0, 630.0], [86.1, 631.0], [86.2, 634.0], [86.3, 636.0], [86.4, 640.0], [86.5, 645.0], [86.6, 649.0], [86.7, 653.0], [86.8, 656.0], [86.9, 658.0], [87.0, 661.0], [87.1, 665.0], [87.2, 667.0], [87.3, 670.0], [87.4, 674.0], [87.5, 678.0], [87.6, 681.0], [87.7, 686.0], [87.8, 690.0], [87.9, 693.0], [88.0, 696.0], [88.1, 701.0], [88.2, 705.0], [88.3, 708.0], [88.4, 713.0], [88.5, 716.0], [88.6, 720.0], [88.7, 724.0], [88.8, 728.0], [88.9, 733.0], [89.0, 735.0], [89.1, 739.0], [89.2, 744.0], [89.3, 749.0], [89.4, 754.0], [89.5, 758.0], [89.6, 762.0], [89.7, 767.0], [89.8, 770.0], [89.9, 774.0], [90.0, 778.0], [90.1, 786.0], [90.2, 790.0], [90.3, 796.0], [90.4, 802.0], [90.5, 807.0], [90.6, 810.0], [90.7, 814.0], [90.8, 817.0], [90.9, 820.0], [91.0, 825.0], [91.1, 832.0], [91.2, 835.0], [91.3, 841.0], [91.4, 848.0], [91.5, 855.0], [91.6, 858.0], [91.7, 863.0], [91.8, 867.0], [91.9, 870.0], [92.0, 877.0], [92.1, 882.0], [92.2, 886.0], [92.3, 891.0], [92.4, 895.0], [92.5, 901.0], [92.6, 909.0], [92.7, 913.0], [92.8, 919.0], [92.9, 925.0], [93.0, 930.0], [93.1, 934.0], [93.2, 938.0], [93.3, 941.0], [93.4, 946.0], [93.5, 952.0], [93.6, 958.0], [93.7, 963.0], [93.8, 968.0], [93.9, 974.0], [94.0, 982.0], [94.1, 989.0], [94.2, 993.0], [94.3, 996.0], [94.4, 1001.0], [94.5, 1007.0], [94.6, 1010.0], [94.7, 1016.0], [94.8, 1021.0], [94.9, 1031.0], [95.0, 1040.0], [95.1, 1044.0], [95.2, 1054.0], [95.3, 1064.0], [95.4, 1069.0], [95.5, 1072.0], [95.6, 1081.0], [95.7, 1089.0], [95.8, 1100.0], [95.9, 1104.0], [96.0, 1111.0], [96.1, 1122.0], [96.2, 1127.0], [96.3, 1137.0], [96.4, 1152.0], [96.5, 1162.0], [96.6, 1171.0], [96.7, 1183.0], [96.8, 1189.0], [96.9, 1196.0], [97.0, 1206.0], [97.1, 1217.0], [97.2, 1231.0], [97.3, 1244.0], [97.4, 1259.0], [97.5, 1276.0], [97.6, 1287.0], [97.7, 1296.0], [97.8, 1316.0], [97.9, 1331.0], [98.0, 1347.0], [98.1, 1364.0], [98.2, 1400.0], [98.3, 1416.0], [98.4, 1436.0], [98.5, 1459.0], [98.6, 1484.0], [98.7, 1507.0], [98.8, 1538.0], [98.9, 1562.0], [99.0, 1617.0], [99.1, 1648.0], [99.2, 1736.0], [99.3, 1835.0], [99.4, 1973.0], [99.5, 2386.0], [99.6, 30010.0], [99.7, 30016.0], [99.8, 30019.0], [99.9, 30025.0], [100.0, 30069.0]], "isOverall": false, "label": "Listar Pistas", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 6332.0, "series": [{"data": [[0.0, 3889.0], [600.0, 483.0], [700.0, 368.0], [2700.0, 1.0], [200.0, 907.0], [800.0, 292.0], [900.0, 236.0], [1000.0, 148.0], [1100.0, 143.0], [300.0, 831.0], [1200.0, 77.0], [1300.0, 56.0], [1400.0, 32.0], [1500.0, 21.0], [100.0, 1123.0], [400.0, 720.0], [1600.0, 15.0], [1700.0, 15.0], [1800.0, 7.0], [30000.0, 75.0], [500.0, 560.0], [2000.0, 1.0]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada", "isController": false}, {"data": [[0.0, 6332.0], [600.0, 310.0], [700.0, 231.0], [800.0, 210.0], [900.0, 189.0], [1000.0, 144.0], [1100.0, 115.0], [1200.0, 77.0], [1300.0, 48.0], [1400.0, 49.0], [1500.0, 28.0], [100.0, 594.0], [1600.0, 21.0], [1700.0, 9.0], [1800.0, 6.0], [1900.0, 11.0], [30000.0, 47.0], [2000.0, 3.0], [2200.0, 1.0], [2300.0, 3.0], [2400.0, 1.0], [2500.0, 1.0], [3000.0, 1.0], [200.0, 417.0], [300.0, 416.0], [400.0, 387.0], [500.0, 349.0]], "isOverall": false, "label": "Listar Pistas", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 30000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 127.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8661.0, "series": [{"data": [[0.0, 8661.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2899.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 127.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 8313.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 754.7175999999995, "minX": 1.75003236E12, "maxY": 754.7175999999995, "series": [{"data": [[1.75003236E12, 754.7175999999995]], "isOverall": false, "label": "NoAuth", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75003236E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 3687.696574225128, "series": [{"data": [[4.0, 6.0], [5.0, 5.0], [7.0, 5.0], [8.0, 5.0], [10.0, 5.0], [11.0, 6.0], [16.0, 5.0], [17.0, 5.0], [18.0, 5.0], [19.0, 5.0], [20.0, 5.0], [21.0, 5.0], [24.0, 6.0], [25.0, 6.0], [26.0, 6.0], [27.0, 8.0], [28.0, 12.0], [29.0, 5.142857142857143], [30.0, 5.0], [31.0, 7.142857142857143], [33.0, 5.333333333333333], [32.0, 6.0], [35.0, 4.75], [34.0, 5.0], [37.0, 5.0], [36.0, 5.0], [39.0, 5.2], [38.0, 4.0], [41.0, 5.0], [40.0, 5.0], [43.0, 4.0], [42.0, 8.0], [45.0, 5.0], [44.0, 5.75], [46.0, 5.499999999999999], [49.0, 5.0], [48.0, 5.0], [50.0, 5.0], [53.0, 6.0], [52.0, 5.0], [55.0, 5.666666666666667], [54.0, 6.0], [56.0, 5.428571428571429], [59.0, 5.5], [58.0, 4.8], [61.0, 5.25], [60.0, 5.25], [63.0, 5.5], [62.0, 5.0], [67.0, 5.5], [66.0, 5.857142857142857], [65.0, 5.0], [71.0, 5.800000000000001], [68.0, 5.0], [75.0, 5.0], [74.0, 5.571428571428571], [73.0, 5.666666666666667], [72.0, 5.090909090909091], [79.0, 5.75], [78.0, 5.0], [77.0, 5.2727272727272725], [76.0, 5.666666666666667], [82.0, 5.5], [81.0, 6.0], [86.0, 6.0], [85.0, 5.0], [84.0, 5.5], [91.0, 10.0], [90.0, 8.0], [89.0, 5.538461538461538], [88.0, 5.5], [95.0, 27.5], [94.0, 16.4], [93.0, 21.0], [99.0, 13.666666666666666], [98.0, 22.0], [97.0, 24.25], [96.0, 14.666666666666666], [103.0, 13.0], [102.0, 12.0], [100.0, 21.25], [107.0, 10.857142857142858], [106.0, 17.0], [105.0, 13.0], [104.0, 12.8], [111.0, 11.0], [110.0, 10.0], [109.0, 12.0], [108.0, 14.666666666666666], [115.0, 7.0], [114.0, 9.0], [113.0, 10.5], [112.0, 7.0], [119.0, 5.0], [118.0, 5.75], [117.0, 5.0], [116.0, 5.875], [123.0, 6.0], [122.0, 3687.696574225128], [121.0, 6.0], [120.0, 5.75], [127.0, 6.0], [126.0, 5.0], [125.0, 8.0], [124.0, 16.0], [135.0, 5.0], [134.0, 5.0], [133.0, 5.0], [132.0, 6.0], [131.0, 5.0], [130.0, 6.0], [129.0, 6.0], [128.0, 6.0], [143.0, 5.0], [142.0, 6.0], [141.0, 6.0], [140.0, 5.0], [139.0, 5.0], [138.0, 5.0], [137.0, 6.0], [136.0, 5.0], [151.0, 6.0], [149.0, 6.0], [148.0, 6.0], [147.0, 6.0], [146.0, 6.0], [145.0, 6.0], [144.0, 6.0], [159.0, 6.0], [157.0, 5.0], [156.0, 6.0], [154.0, 5.0], [153.0, 6.0], [167.0, 5.0], [166.0, 5.0], [163.0, 6.0], [162.0, 6.0], [161.0, 5.5], [160.0, 5.0], [175.0, 5.0], [174.0, 4.0], [173.0, 4.0], [172.0, 4.0], [170.0, 4.0], [169.0, 5.0], [168.0, 5.0], [183.0, 7.0], [181.0, 6.0], [180.0, 6.0], [179.0, 5.5], [178.0, 6.0], [177.0, 7.0], [176.0, 4.0], [191.0, 6.0], [189.0, 6.0], [188.0, 7.0], [187.0, 6.0], [185.0, 5.0], [184.0, 7.0], [199.0, 5.0], [198.0, 5.0], [197.0, 6.0], [196.0, 6.0], [195.0, 5.0], [194.0, 6.0], [193.0, 5.5], [192.0, 5.0], [207.0, 5.0], [206.0, 5.0], [204.0, 5.0], [202.0, 5.0], [200.0, 5.0], [215.0, 6.0], [214.0, 6.0], [212.0, 8.0], [211.0, 5.25], [208.0, 5.0], [223.0, 7.5], [222.0, 5.0], [221.0, 5.5], [220.0, 6.0], [219.0, 6.5], [217.0, 8.0], [216.0, 6.0], [231.0, 8.0], [230.0, 8.0], [229.0, 7.5], [226.0, 8.0], [225.0, 6.0], [224.0, 5.0], [239.0, 6.0], [238.0, 6.5], [237.0, 5.0], [236.0, 8.0], [235.0, 7.0], [234.0, 6.0], [233.0, 6.5], [232.0, 7.0], [247.0, 10.333333333333334], [246.0, 9.0], [245.0, 9.0], [244.0, 9.0], [243.0, 8.5], [242.0, 7.0], [241.0, 9.0], [240.0, 7.0], [255.0, 8.0], [254.0, 11.0], [253.0, 9.0], [252.0, 8.0], [250.0, 8.0], [249.0, 8.0], [270.0, 5.0], [271.0, 5.0], [269.0, 6.0], [268.0, 6.0], [267.0, 7.666666666666667], [266.0, 8.0], [265.0, 8.0], [264.0, 6.0], [263.0, 7.0], [259.0, 7.0], [258.0, 10.0], [257.0, 8.0], [256.0, 8.5], [262.0, 5.0], [275.0, 6.0], [287.0, 5.0], [286.0, 5.333333333333334], [283.0, 5.0], [282.0, 5.0], [281.0, 6.0], [279.0, 5.75], [277.0, 6.0], [276.0, 6.0], [274.0, 5.0], [273.0, 5.0], [272.0, 6.0], [302.0, 5.5], [303.0, 6.0], [301.0, 5.0], [300.0, 6.0], [299.0, 5.0], [298.0, 5.2], [296.0, 5.25], [295.0, 7.0], [289.0, 6.0], [288.0, 5.333333333333333], [291.0, 6.0], [290.0, 6.0], [294.0, 5.5], [293.0, 5.857142857142857], [292.0, 5.0], [318.0, 8.5], [319.0, 10.0], [317.0, 8.0], [316.0, 7.0], [315.0, 7.0], [314.0, 6.4], [312.0, 6.0], [311.0, 7.0], [305.0, 5.0], [304.0, 5.0], [307.0, 6.0], [306.0, 6.0], [310.0, 8.333333333333334], [309.0, 7.0], [308.0, 9.0], [323.0, 8.0], [333.0, 6.0], [335.0, 6.6], [332.0, 7.0], [322.0, 8.0], [321.0, 8.0], [320.0, 9.0], [329.0, 7.5], [328.0, 7.5], [327.0, 9.5], [326.0, 7.0], [325.0, 9.0], [324.0, 10.0], [349.0, 25.5], [350.0, 12.5], [348.0, 16.75], [339.0, 6.666666666666667], [338.0, 7.0], [337.0, 6.0], [336.0, 9.076923076923077], [347.0, 19.0], [346.0, 23.0], [344.0, 16.0], [343.0, 16.666666666666668], [342.0, 26.0], [341.0, 6.75], [340.0, 7.0], [365.0, 52.0], [366.0, 80.0], [364.0, 13.0], [355.0, 62.0], [354.0, 24.0], [353.0, 36.333333333333336], [363.0, 21.0], [362.0, 27.5], [361.0, 81.5], [360.0, 40.0], [359.0, 43.0], [358.0, 38.0], [357.0, 30.5], [382.0, 28.75], [383.0, 33.2], [381.0, 21.0], [380.0, 110.0], [379.0, 40.0], [378.0, 18.666666666666664], [377.0, 11.0], [376.0, 68.0], [375.0, 34.0], [369.0, 15.0], [368.0, 20.0], [371.0, 23.0], [370.0, 22.999999999999996], [373.0, 21.75], [372.0, 18.333333333333332], [398.0, 31.0], [399.0, 27.5], [397.0, 22.285714285714285], [396.0, 16.5], [395.0, 30.0], [394.0, 33.333333333333336], [393.0, 18.5], [392.0, 14.0], [391.0, 9.666666666666666], [384.0, 24.5], [387.0, 50.0], [385.0, 66.0], [390.0, 7.0], [389.0, 8.0], [388.0, 31.75], [412.0, 13.0], [414.0, 36.0], [415.0, 28.5], [413.0, 28.0], [411.0, 34.0], [408.0, 24.0], [407.0, 30.0], [401.0, 21.0], [400.0, 31.5], [403.0, 19.0], [402.0, 42.333333333333336], [406.0, 45.0], [405.0, 29.5], [404.0, 20.0], [431.0, 98.14285714285714], [424.0, 33.333333333333336], [428.0, 60.0], [419.0, 23.5], [417.0, 21.4], [416.0, 40.0], [429.0, 95.44444444444444], [430.0, 14.833333333333334], [427.0, 13.333333333333334], [426.0, 11.333333333333334], [425.0, 14.0], [423.0, 16.5], [422.0, 10.0], [421.0, 14.5], [420.0, 23.0], [433.0, 35.86666666666667], [432.0, 62.21052631578948], [434.0, 124.73333333333333], [435.0, 100.22222222222223], [436.0, 109.33333333333334], [437.0, 72.33333333333334], [438.0, 57.00000000000001], [439.0, 131.16666666666666], [440.0, 124.69230769230772], [441.0, 8.8], [446.0, 215.99999999999994], [447.0, 12.666666666666666], [444.0, 234.0], [445.0, 91.18181818181816], [442.0, 230.85714285714286], [443.0, 207.75], [449.0, 239.0], [448.0, 201.375], [450.0, 300.00000000000006], [451.0, 215.88888888888889], [452.0, 338.7058823529412], [454.0, 312.81818181818176], [453.0, 40.25], [455.0, 239.1], [456.0, 258.3333333333334], [463.0, 165.0], [460.0, 229.74999999999997], [461.0, 8.0], [462.0, 312.2], [457.0, 106.0], [458.0, 314.87499999999994], [459.0, 139.33333333333334], [466.0, 17.25], [469.0, 390.3666666666667], [468.0, 10.0], [470.0, 369.07692307692304], [471.0, 423.79999999999995], [465.0, 9.0], [464.0, 8.5], [472.0, 340.0], [473.0, 6.8], [479.0, 107.33333333333333], [478.0, 6.333333333333333], [476.0, 7.333333333333333], [467.0, 13.666666666666666], [475.0, 8.75], [474.0, 7.0], [493.0, 23.333333333333332], [480.0, 31.75], [482.0, 138.85714285714286], [481.0, 12.0], [492.0, 26.5], [484.0, 127.83333333333334], [485.0, 24.0], [486.0, 179.28571428571428], [487.0, 99.99999999999999], [489.0, 149.6], [490.0, 25.454545454545457], [491.0, 29.0], [495.0, 30.5], [488.0, 31.8], [494.0, 27.5], [508.0, 59.142857142857146], [498.0, 34.6], [496.0, 21.5], [499.0, 37.3], [502.0, 72.74999999999999], [501.0, 23.0], [500.0, 33.5], [503.0, 61.666666666666664], [504.0, 40.25], [505.0, 72.2], [507.0, 35.0], [506.0, 42.285714285714285], [510.0, 51.333333333333336], [509.0, 43.0], [511.0, 54.5], [518.0, 75.5], [524.0, 40.42857142857142], [514.0, 58.82352941176471], [513.0, 67.75], [512.0, 25.0], [526.0, 29.0], [525.0, 101.8], [527.0, 64.58333333333333], [515.0, 77.4], [517.0, 47.0], [516.0, 42.0], [519.0, 102.5], [536.0, 89.33333333333333], [538.0, 70.83333333333333], [537.0, 127.0], [539.0, 51.0], [540.0, 53.6], [543.0, 70.80000000000001], [542.0, 101.0], [541.0, 92.0], [528.0, 73.8], [529.0, 75.0], [530.0, 77.0], [532.0, 65.4], [531.0, 83.8], [534.0, 113.0], [533.0, 94.83333333333334], [520.0, 46.5], [521.0, 46.5], [522.0, 73.8], [523.0, 100.0], [550.0, 117.87500000000001], [557.0, 110.42857142857143], [544.0, 53.0], [546.0, 29.0], [545.0, 39.333333333333336], [547.0, 84.85714285714286], [549.0, 110.5], [548.0, 37.5], [560.0, 74.5], [574.0, 222.33333333333331], [573.0, 33.0], [571.0, 110.8], [572.0, 78.5], [569.0, 115.44444444444444], [568.0, 83.0], [551.0, 81.8], [570.0, 88.5], [561.0, 97.25], [562.0, 116.33333333333334], [564.0, 106.2], [563.0, 213.33333333333334], [565.0, 184.85714285714286], [566.0, 133.0], [567.0, 127.33333333333333], [553.0, 84.0], [552.0, 53.0], [554.0, 145.75], [556.0, 144.8], [555.0, 99.5], [559.0, 136.8], [558.0, 133.66666666666669], [580.0, 187.26315789473685], [576.0, 131.25], [577.0, 59.0], [579.0, 66.5], [578.0, 115.28571428571429], [590.0, 119.0], [589.0, 77.2], [581.0, 73.14285714285714], [583.0, 101.75], [582.0, 57.5], [600.0, 24.125], [602.0, 196.8], [601.0, 83.1], [603.0, 105.33333333333333], [604.0, 156.20000000000002], [605.0, 212.83333333333334], [606.0, 128.25], [607.0, 172.33333333333331], [584.0, 69.33333333333333], [585.0, 66.66666666666667], [586.0, 227.8], [587.0, 116.36363636363637], [588.0, 138.33333333333334], [592.0, 135.0], [593.0, 90.05882352941177], [594.0, 79.66666666666667], [596.0, 55.8], [595.0, 57.0], [597.0, 116.18181818181817], [598.0, 24.6], [599.0, 137.14285714285714], [612.0, 280.8], [619.0, 479.75], [609.0, 149.16666666666666], [608.0, 206.5], [621.0, 90.26666666666667], [620.0, 45.333333333333336], [622.0, 63.5], [623.0, 261.0], [610.0, 198.9047619047619], [611.0, 88.0], [613.0, 173.57142857142858], [615.0, 80.66666666666667], [614.0, 81.33333333333333], [632.0, 254.8], [633.0, 181.18181818181816], [634.0, 243.74999999999997], [635.0, 307.2727272727273], [636.0, 32.0], [639.0, 194.42857142857142], [637.0, 25.0], [624.0, 28.0], [625.0, 196.0], [626.0, 61.333333333333336], [627.0, 216.5], [628.0, 112.4], [629.0, 200.0], [630.0, 309.375], [631.0, 186.36363636363635], [616.0, 224.6842105263158], [617.0, 39.0], [618.0, 57.4], [664.0, 369.8], [644.0, 183.22222222222226], [640.0, 147.0], [641.0, 23.333333333333332], [643.0, 28.0], [642.0, 24.5], [645.0, 366.0], [646.0, 135.72222222222223], [647.0, 371.85714285714283], [665.0, 335.29999999999995], [667.0, 20.5], [666.0, 30.6], [669.0, 23.0], [668.0, 30.0], [671.0, 414.75], [670.0, 18.5], [656.0, 325.5], [657.0, 281.9166666666667], [658.0, 188.66666666666669], [660.0, 529.6666666666667], [659.0, 46.166666666666664], [661.0, 110.83333333333333], [662.0, 168.1176470588235], [663.0, 108.19999999999999], [651.0, 640.6666666666666], [650.0, 31.666666666666668], [649.0, 30.0], [648.0, 27.062499999999996], [652.0, 285.6428571428571], [653.0, 230.0], [654.0, 32.333333333333336], [655.0, 91.22222222222223], [678.0, 314.6111111111111], [673.0, 265.52941176470586], [672.0, 544.1], [686.0, 126.0], [685.0, 49.66666666666667], [684.0, 47.4], [687.0, 102.84615384615384], [675.0, 450.7857142857143], [674.0, 25.5], [676.0, 143.28571428571428], [677.0, 601.375], [679.0, 246.75], [696.0, 297.64285714285717], [697.0, 157.60000000000002], [698.0, 116.42857142857143], [699.0, 118.0], [700.0, 124.49999999999999], [701.0, 116.1], [702.0, 164.2857142857143], [703.0, 45.0], [688.0, 108.93333333333334], [691.0, 143.63157894736844], [690.0, 271.0], [689.0, 127.71428571428572], [692.0, 115.10000000000001], [693.0, 306.0], [694.0, 214.0], [695.0, 166.84615384615387], [682.0, 221.87179487179492], [681.0, 28.4], [680.0, 11.8], [683.0, 179.25], [711.0, 150.5], [706.0, 183.54545454545453], [705.0, 128.57142857142856], [718.0, 184.0], [719.0, 320.5], [716.0, 204.0], [717.0, 235.125], [707.0, 155.28571428571428], [708.0, 213.41666666666663], [709.0, 223.5], [710.0, 101.5], [720.0, 245.75], [734.0, 243.33333333333331], [732.0, 272.25], [731.0, 285.0], [733.0, 251.0], [729.0, 240.6315789473684], [728.0, 135.6], [730.0, 254.5], [721.0, 142.00000000000003], [723.0, 121.14285714285714], [722.0, 77.0], [724.0, 202.10526315789468], [727.0, 132.5], [726.0, 166.0], [725.0, 365.0], [712.0, 145.9090909090909], [713.0, 211.6], [714.0, 190.75], [715.0, 229.0], [741.0, 176.85714285714283], [737.0, 199.5], [736.0, 136.46153846153848], [751.0, 243.5833333333333], [750.0, 328.6666666666667], [738.0, 172.46153846153848], [739.0, 221.58333333333334], [740.0, 534.3333333333333], [752.0, 191.5], [767.0, 204.2], [765.0, 154.8], [766.0, 335.0], [763.0, 274.0], [762.0, 70.33333333333333], [764.0, 206.5], [760.0, 350.3333333333333], [743.0, 97.0], [742.0, 390.5], [761.0, 345.2666666666667], [753.0, 322.0], [754.0, 209.38461538461542], [756.0, 278.6666666666667], [755.0, 350.4], [758.0, 244.8125], [757.0, 214.75], [746.0, 250.66666666666669], [745.0, 111.6], [744.0, 170.0], [747.0, 247.5], [748.0, 203.71428571428572], [749.0, 370.1428571428572], [771.0, 369.0], [768.0, 370.0], [783.0, 241.0], [781.0, 413.0], [780.0, 406.85714285714283], [782.0, 373.2], [778.0, 285.62499999999994], [779.0, 397.75], [769.0, 257.5], [770.0, 239.84615384615384], [772.0, 454.78571428571433], [773.0, 248.66666666666669], [774.0, 462.58333333333326], [775.0, 329.24999999999994], [785.0, 194.75], [784.0, 994.0], [798.0, 212.4], [799.0, 45.0], [796.0, 609.0], [797.0, 474.8333333333333], [794.0, 273.3333333333333], [795.0, 698.5], [792.0, 138.0], [793.0, 339.0], [786.0, 476.46153846153845], [787.0, 140.33333333333334], [788.0, 448.78571428571433], [789.0, 207.6], [790.0, 170.28571428571433], [791.0, 31.0], [776.0, 492.3333333333333], [777.0, 427.4545454545455], [803.0, 384.3333333333333], [800.0, 242.22222222222223], [815.0, 224.3333333333333], [813.0, 274.875], [814.0, 511.0], [810.0, 284.94736842105266], [811.0, 391.1666666666667], [812.0, 181.13333333333335], [801.0, 152.3], [802.0, 234.37500000000003], [804.0, 197.83333333333334], [805.0, 396.76923076923083], [806.0, 278.15384615384613], [807.0, 261.77777777777777], [816.0, 137.0], [830.0, 116.5], [831.0, 265.2857142857143], [828.0, 177.6923076923077], [829.0, 185.63636363636363], [826.0, 209.4], [827.0, 75.75], [824.0, 280.0], [825.0, 142.8], [817.0, 219.72727272727275], [818.0, 165.25], [819.0, 253.33333333333334], [820.0, 200.85714285714286], [821.0, 189.62500000000003], [822.0, 198.6], [823.0, 250.25], [808.0, 441.8888888888889], [809.0, 369.9166666666667], [839.0, 474.83333333333337], [835.0, 247.0], [832.0, 182.83333333333334], [846.0, 324.0], [844.0, 423.8333333333332], [845.0, 546.5], [833.0, 228.33333333333331], [834.0, 74.0], [836.0, 327.3333333333333], [837.0, 393.37500000000006], [838.0, 339.7272727272727], [848.0, 486.3636363636364], [862.0, 499.99999999999994], [863.0, 320.33333333333337], [860.0, 415.0], [861.0, 209.57142857142856], [858.0, 211.4], [859.0, 181.0], [856.0, 539.6], [857.0, 323.33333333333337], [849.0, 192.625], [851.0, 378.71428571428567], [850.0, 413.5], [852.0, 407.0], [853.0, 421.3333333333333], [854.0, 352.92307692307696], [855.0, 352.6], [840.0, 589.4], [842.0, 440.0], [841.0, 302.0], [843.0, 264.38461538461536], [871.0, 697.5], [867.0, 200.33333333333334], [864.0, 199.00000000000003], [879.0, 323.75], [877.0, 262.2222222222222], [875.0, 527.6999999999999], [874.0, 345.0], [878.0, 129.0], [865.0, 335.08333333333337], [866.0, 404.0384615384616], [868.0, 349.6666666666667], [869.0, 582.4000000000001], [870.0, 794.0], [880.0, 352.24], [894.0, 740.5], [895.0, 329.16666666666663], [892.0, 314.4], [893.0, 284.2], [890.0, 236.33333333333334], [889.0, 361.0], [888.0, 312.75], [891.0, 100.0], [881.0, 192.0], [882.0, 185.0], [883.0, 330.04999999999995], [885.0, 231.99999999999994], [884.0, 161.75], [886.0, 302.3333333333333], [887.0, 344.5], [872.0, 503.38888888888897], [873.0, 317.0], [903.0, 518.1666666666666], [898.0, 433.5384615384616], [897.0, 314.5], [911.0, 17.0], [896.0, 28.333333333333332], [900.0, 409.22222222222223], [899.0, 139.0], [901.0, 462.25000000000006], [902.0, 598.2857142857142], [916.0, 704.85], [915.0, 613.0], [914.0, 554.6], [913.0, 60.0], [912.0, 363.5], [918.0, 395.6666666666667], [917.0, 414.0], [927.0, 501.242424242424], [926.0, 355.4], [925.0, 489.79999999999995], [924.0, 557.5714285714286], [923.0, 461.78571428571433], [922.0, 513.4285714285713], [921.0, 420.33333333333326], [920.0, 474.91666666666663], [904.0, 132.5], [906.0, 31.0], [905.0, 536.0], [907.0, 346.5], [909.0, 259.15384615384613], [910.0, 300.16666666666663], [956.0, 652.5], [945.0, 811.1470588235292], [944.0, 408.45833333333337], [946.0, 1014.9], [950.0, 850.5833333333335], [949.0, 396.0], [948.0, 431.1666666666667], [947.0, 474.0], [951.0, 887.0638297872339], [952.0, 842.5624999999999], [934.0, 198.13333333333333], [933.0, 414.0], [932.0, 326.0], [931.0, 273.5], [930.0, 85.0], [929.0, 332.83333333333337], [943.0, 470.9411764705883], [942.0, 270.14285714285717], [941.0, 237.83333333333334], [940.0, 251.0], [939.0, 214.7], [938.0, 152.75], [937.0, 405.3333333333333], [936.0, 425.125], [953.0, 459.6923076923077], [955.0, 399.16666666666663], [954.0, 413.3191489361701], [958.0, 397.9285714285714], [957.0, 226.125], [959.0, 284.0], [964.0, 290.7142857142857], [974.0, 369.62500000000006], [962.0, 431.625], [961.0, 432.45454545454544], [975.0, 444.8333333333333], [960.0, 472.53658536585374], [963.0, 318.81818181818176], [967.0, 289.3571428571429], [965.0, 212.71428571428572], [984.0, 465.36250000000007], [987.0, 216.61538461538458], [986.0, 815.5333333333333], [985.0, 441.5555555555555], [988.0, 211.88235294117646], [989.0, 531.9166666666667], [990.0, 461.00000000000006], [991.0, 667.0833333333333], [976.0, 349.625], [977.0, 276.26666666666665], [978.0, 417.0], [979.0, 511.6249999999999], [980.0, 116.0], [981.0, 367.7857142857143], [982.0, 465.2], [983.0, 661.6923076923077], [969.0, 518.75], [968.0, 463.5625], [970.0, 663.0727272727272], [973.0, 408.81818181818176], [972.0, 466.17391304347825], [971.0, 430.7142857142857], [994.0, 390.30769230769226], [993.0, 781.3333333333333], [995.0, 691.7599999999998], [996.0, 570.9464285714288], [997.0, 452.3033707865169], [998.0, 502.5492957746479], [999.0, 460.9647887323946], [1000.0, 450.86267958570005], [992.0, 388.0], [1.0, 6.0]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada", "isController": false}, {"data": [[755.0936000000002, 537.5532000000002]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada-Aggregated", "isController": false}, {"data": [[4.0, 6.0], [7.0, 4.333333333333333], [8.0, 6.0], [10.0, 5.0], [11.0, 6.0], [16.0, 5.0], [17.0, 5.0], [18.0, 5.0], [19.0, 6.0], [21.0, 6.0], [24.0, 6.0], [25.0, 5.0], [27.0, 9.0], [28.0, 17.0], [29.0, 5.0], [30.0, 5.25], [31.0, 5.4], [33.0, 5.142857142857143], [35.0, 5.25], [34.0, 5.666666666666667], [37.0, 6.0], [36.0, 7.0], [39.0, 5.2], [41.0, 6.25], [40.0, 5.5], [43.0, 7.0], [42.0, 16.0], [46.0, 5.583333333333334], [49.0, 5.6], [50.0, 6.0], [53.0, 5.5], [52.0, 6.0], [55.0, 5.0], [54.0, 5.5], [56.0, 5.75], [59.0, 5.0], [58.0, 5.0], [61.0, 5.2], [60.0, 5.6], [63.0, 5.0], [67.0, 5.0], [66.0, 5.571428571428571], [65.0, 5.6], [71.0, 5.0], [68.0, 6.0], [75.0, 4.0], [74.0, 5.142857142857143], [73.0, 5.75], [72.0, 5.666666666666667], [79.0, 5.5], [78.0, 4.666666666666667], [77.0, 5.833333333333334], [76.0, 4.5], [82.0, 5.0], [84.0, 5.6], [90.0, 9.666666666666666], [89.0, 5.857142857142857], [88.0, 6.428571428571429], [95.0, 30.0], [94.0, 27.0], [93.0, 32.0], [99.0, 17.5], [98.0, 20.0], [97.0, 18.571428571428573], [96.0, 27.0], [103.0, 18.0], [100.0, 17.23076923076923], [107.0, 15.0], [106.0, 13.0], [105.0, 14.5], [104.0, 13.444444444444445], [111.0, 13.0], [109.0, 12.571428571428571], [115.0, 6.2857142857142865], [114.0, 8.833333333333334], [113.0, 8.0], [119.0, 6.0], [117.0, 5.5], [116.0, 7.249999999999999], [123.0, 6.0], [122.0, 2635.4953617810793], [121.0, 6.0], [120.0, 6.0], [127.0, 6.0], [126.0, 6.0], [125.0, 8.0], [124.0, 16.0], [135.0, 5.0], [134.0, 6.0], [133.0, 5.0], [132.0, 6.0], [131.0, 6.0], [130.0, 1.0], [129.0, 6.0], [128.0, 6.0], [141.0, 6.0], [140.0, 6.0], [139.0, 6.0], [138.0, 6.0], [137.0, 7.0], [136.0, 0.0], [147.0, 161.1578947368421], [148.0, 165.15384615384616], [149.0, 47.75], [151.0, 6.0], [144.0, 5.666666666666667], [157.0, 166.75], [158.0, 189.25], [155.0, 270.8], [153.0, 32.0], [154.0, 11.75], [152.0, 51.5], [159.0, 37.0], [156.0, 6.0], [161.0, 84.71428571428571], [165.0, 43.0], [166.0, 18.0], [160.0, 72.16666666666667], [164.0, 44.0], [167.0, 5.0], [163.0, 5.0], [162.0, 6.0], [168.0, 20.0], [169.0, 14.666666666666668], [171.0, 15.0], [173.0, 9.666666666666666], [174.0, 12.333333333333334], [175.0, 8.5], [172.0, 5.0], [170.0, 5.0], [176.0, 8.0], [177.0, 10.5], [178.0, 15.0], [180.0, 10.666666666666666], [182.0, 36.0], [183.0, 29.0], [181.0, 6.0], [179.0, 6.5], [184.0, 14.6], [187.0, 15.5], [188.0, 20.5], [189.0, 10.5], [190.0, 14.0], [191.0, 16.0], [185.0, 7.0], [192.0, 7.4], [193.0, 10.0], [194.0, 13.0], [195.0, 7.666666666666667], [196.0, 9.0], [197.0, 6.75], [198.0, 6.666666666666667], [199.0, 9.0], [201.0, 10.0], [203.0, 11.5], [204.0, 8.5], [205.0, 11.0], [206.0, 5.666666666666667], [207.0, 7.5], [202.0, 5.0], [200.0, 5.0], [208.0, 6.666666666666667], [209.0, 10.0], [211.0, 7.666666666666666], [212.0, 10.0], [213.0, 9.0], [214.0, 10.0], [215.0, 16.0], [216.0, 13.0], [217.0, 8.666666666666668], [218.0, 15.0], [219.0, 8.75], [220.0, 9.0], [221.0, 7.666666666666667], [222.0, 8.5], [223.0, 9.0], [224.0, 7.666666666666667], [225.0, 9.0], [226.0, 12.0], [228.0, 13.0], [229.0, 16.5], [230.0, 8.285714285714286], [231.0, 11.0], [232.0, 13.0], [233.0, 8.0], [234.0, 7.0], [235.0, 11.0], [236.0, 9.333333333333334], [237.0, 9.0], [238.0, 7.5], [239.0, 7.0], [240.0, 10.0], [241.0, 11.0], [243.0, 9.8], [246.0, 11.0], [247.0, 10.571428571428571], [245.0, 13.0], [249.0, 8.0], [251.0, 9.0], [252.0, 10.5], [253.0, 8.666666666666666], [254.0, 8.0], [255.0, 9.0], [250.0, 9.833333333333332], [269.0, 9.0], [256.0, 8.0], [258.0, 8.0], [257.0, 10.0], [268.0, 6.2], [259.0, 6.285714285714286], [261.0, 12.0], [262.0, 6.6], [264.0, 7.5], [265.0, 9.2], [266.0, 8.0], [267.0, 7.0], [270.0, 10.0], [271.0, 5.9], [274.0, 5.5], [272.0, 8.5], [275.0, 8.5], [284.0, 9.0], [285.0, 9.0], [286.0, 5.625], [287.0, 5.75], [276.0, 5.666666666666667], [277.0, 7.0], [278.0, 8.0], [279.0, 6.5], [280.0, 9.0], [281.0, 6.6], [283.0, 8.5], [282.0, 5.5], [290.0, 9.0], [288.0, 7.75], [291.0, 5.6], [300.0, 11.0], [301.0, 12.0], [302.0, 6.166666666666667], [303.0, 9.0], [292.0, 10.0], [293.0, 5.142857142857143], [294.0, 7.0], [296.0, 4.857142857142857], [297.0, 9.0], [298.0, 5.8], [299.0, 6.0], [305.0, 9.0], [304.0, 7.333333333333333], [306.0, 5.0], [307.0, 8.666666666666666], [308.0, 7.666666666666667], [309.0, 10.0], [310.0, 9.0], [311.0, 7.0], [312.0, 9.0], [319.0, 8.2], [318.0, 8.5], [316.0, 9.0], [317.0, 9.0], [313.0, 9.0], [314.0, 4.8], [321.0, 10.0], [320.0, 9.0], [322.0, 6.777777777777778], [323.0, 8.0], [325.0, 9.0], [324.0, 8.0], [326.0, 6.999999999999999], [327.0, 10.0], [329.0, 8.6], [328.0, 6.0], [334.0, 8.5], [335.0, 8.333333333333334], [332.0, 7.2], [333.0, 7.333333333333333], [330.0, 8.0], [331.0, 11.0], [337.0, 8.0], [336.0, 7.5625], [338.0, 8.0], [339.0, 5.6], [341.0, 7.4], [342.0, 8.0], [343.0, 9.0], [344.0, 12.5], [350.0, 21.8], [348.0, 31.333333333333336], [349.0, 9.0], [346.0, 16.0], [347.0, 11.5], [353.0, 27.0], [352.0, 8.5], [355.0, 10.0], [354.0, 22.5], [364.0, 8.666666666666666], [366.0, 16.0], [365.0, 12.0], [367.0, 11.0], [356.0, 8.5], [357.0, 15.0], [359.0, 27.666666666666664], [360.0, 23.625000000000004], [362.0, 10.666666666666668], [363.0, 66.0], [369.0, 12.0], [368.0, 10.0], [370.0, 12.833333333333334], [371.0, 30.5], [372.0, 4.5], [373.0, 33.0], [374.0, 9.0], [375.0, 10.0], [376.0, 10.0], [381.0, 29.333333333333332], [380.0, 29.0], [383.0, 19.833333333333336], [382.0, 24.166666666666668], [377.0, 44.33333333333333], [378.0, 22.571428571428573], [396.0, 42.0], [384.0, 25.0], [385.0, 13.0], [386.0, 23.0], [387.0, 36.55555555555556], [391.0, 26.4], [389.0, 4.5], [388.0, 40.666666666666664], [394.0, 43.83333333333333], [392.0, 18.0], [399.0, 23.714285714285715], [398.0, 26.5], [397.0, 30.0], [401.0, 32.5], [400.0, 28.142857142857142], [402.0, 25.5], [403.0, 30.5], [404.0, 20.0], [405.0, 37.79999999999999], [406.0, 54.666666666666664], [408.0, 27.5], [412.0, 27.0], [414.0, 15.0], [413.0, 34.0], [415.0, 36.142857142857146], [409.0, 18.0], [410.0, 29.0], [411.0, 25.333333333333332], [430.0, 12.333333333333334], [416.0, 29.166666666666668], [417.0, 31.75], [423.0, 16.0], [422.0, 18.0], [421.0, 16.0], [420.0, 14.2], [419.0, 49.333333333333336], [429.0, 146.0], [431.0, 11.0], [428.0, 12.0], [427.0, 10.125], [426.0, 18.0], [425.0, 11.0], [446.0, 14.5], [447.0, 11.0], [445.0, 8.5], [435.0, 8.0], [434.0, 8.0], [433.0, 7.0], [432.0, 8.833333333333334], [443.0, 8.11111111111111], [441.0, 9.0], [440.0, 8.0], [439.0, 7.0], [438.0, 6.666666666666667], [437.0, 7.0], [462.0, 11.0], [451.0, 34.4375], [454.0, 115.88888888888889], [453.0, 14.333333333333332], [452.0, 20.333333333333332], [455.0, 8.25], [449.0, 12.0], [448.0, 12.0], [456.0, 31.624999999999996], [458.0, 185.11111111111111], [463.0, 204.5], [461.0, 10.0], [460.0, 8.0], [459.0, 7.333333333333333], [471.0, 136.33333333333331], [468.0, 160.0], [469.0, 418.4], [470.0, 103.22222222222221], [474.0, 518.0], [473.0, 7.0], [472.0, 5.0], [479.0, 7.0], [478.0, 6.75], [476.0, 7.0], [467.0, 13.0], [466.0, 11.285714285714285], [465.0, 11.0], [475.0, 7.6], [495.0, 31.833333333333336], [486.0, 341.5], [485.0, 8.0], [484.0, 6.666666666666667], [487.0, 52.6], [482.0, 29.0], [480.0, 7.5], [489.0, 439.0], [492.0, 431.0], [494.0, 203.63157894736844], [493.0, 37.0], [491.0, 52.5], [490.0, 31.8], [488.0, 31.666666666666668], [508.0, 172.1538461538462], [498.0, 335.0], [496.0, 149.2], [497.0, 37.0], [499.0, 153.46153846153845], [503.0, 282.6], [502.0, 39.0], [501.0, 20.0], [500.0, 43.0], [504.0, 260.8], [505.0, 67.625], [506.0, 145.92857142857142], [507.0, 101.0], [511.0, 121.0], [510.0, 50.5], [509.0, 76.0], [518.0, 74.2], [526.0, 22.0], [514.0, 72.5], [512.0, 57.6], [527.0, 57.2], [515.0, 87.42857142857143], [517.0, 61.0], [519.0, 70.5], [536.0, 42.0], [537.0, 59.0], [538.0, 117.42857142857142], [543.0, 57.277777777777786], [528.0, 79.11111111111111], [541.0, 78.75], [540.0, 48.0], [539.0, 184.5], [529.0, 23.25], [530.0, 25.875000000000004], [531.0, 62.888888888888886], [532.0, 15.571428571428573], [533.0, 80.6], [534.0, 41.0], [535.0, 39.5], [521.0, 104.27272727272728], [522.0, 97.33333333333333], [524.0, 44.2], [523.0, 81.0], [525.0, 100.33333333333333], [547.0, 87.38461538461539], [556.0, 120.00000000000001], [544.0, 68.60000000000001], [546.0, 56.75], [559.0, 156.5], [550.0, 94.3], [549.0, 143.0], [548.0, 136.0], [551.0, 119.44444444444444], [560.0, 88.66666666666667], [574.0, 248.64705882352942], [572.0, 156.8181818181818], [573.0, 288.0], [570.0, 138.27272727272725], [571.0, 234.66666666666666], [568.0, 164.66666666666666], [569.0, 124.77777777777777], [561.0, 173.25], [562.0, 98.33333333333334], [564.0, 90.37500000000001], [565.0, 149.9047619047619], [566.0, 124.33333333333334], [567.0, 213.375], [552.0, 143.5], [553.0, 161.4], [554.0, 121.25], [555.0, 50.333333333333336], [557.0, 107.51515151515152], [558.0, 160.62499999999997], [582.0, 1.0], [577.0, 67.4], [576.0, 301.8333333333333], [590.0, 80.0], [589.0, 73.8], [578.0, 111.0], [579.0, 88.0], [580.0, 253.48484848484844], [581.0, 128.2], [592.0, 168.05555555555557], [606.0, 168.0], [607.0, 261.5], [604.0, 142.0769230769231], [605.0, 129.63636363636363], [602.0, 164.5], [601.0, 66.82352941176471], [600.0, 109.75], [583.0, 61.83333333333333], [603.0, 296.875], [593.0, 253.0], [597.0, 202.7142857142857], [596.0, 74.6], [595.0, 65.0], [594.0, 76.33333333333333], [598.0, 162.28571428571428], [599.0, 332.19999999999993], [585.0, 217.66666666666666], [584.0, 148.0], [586.0, 166.3333333333334], [587.0, 188.8], [588.0, 290.0], [609.0, 370.8888888888889], [620.0, 104.66666666666666], [608.0, 395.0], [623.0, 213.28571428571428], [621.0, 126.72222222222223], [622.0, 115.81818181818181], [610.0, 239.2941176470588], [611.0, 82.0], [612.0, 360.90000000000003], [613.0, 31.0], [615.0, 88.0], [614.0, 61.0], [632.0, 200.16666666666663], [633.0, 159.64285714285714], [634.0, 43.0], [635.0, 201.74999999999997], [639.0, 212.7333333333333], [637.0, 12.5], [636.0, 47.5], [624.0, 0.0], [625.0, 297.0], [626.0, 59.21428571428571], [627.0, 1.0], [628.0, 219.0], [629.0, 265.0], [630.0, 470.2], [631.0, 148.42857142857142], [616.0, 391.3157894736842], [618.0, 85.63636363636364], [619.0, 115.0], [647.0, 370.0], [643.0, 14.5], [640.0, 164.5], [641.0, 21.3], [655.0, 20.333333333333336], [654.0, 32.0], [644.0, 196.73684210526312], [645.0, 326.77777777777777], [646.0, 194.41176470588232], [656.0, 371.2], [670.0, 6.0], [671.0, 537.0], [668.0, 27.5], [669.0, 8.5], [666.0, 98.18181818181819], [667.0, 24.8], [664.0, 506.6666666666667], [665.0, 471.0], [657.0, 310.28571428571433], [658.0, 126.88888888888889], [659.0, 158.3846153846154], [660.0, 490.4], [661.0, 30.75], [662.0, 86.87500000000001], [663.0, 203.66666666666669], [650.0, 14.5], [649.0, 28.57142857142857], [648.0, 24.833333333333332], [651.0, 248.66666666666666], [652.0, 509.2], [653.0, 566.25], [679.0, 371.5], [675.0, 409.90000000000003], [672.0, 698.6], [685.0, 75.5], [684.0, 2.2], [687.0, 144.28571428571428], [673.0, 96.37500000000003], [674.0, 14.5], [676.0, 244.0], [677.0, 1005.0], [678.0, 459.0], [688.0, 45.14999999999999], [689.0, 76.0], [702.0, 148.1111111111111], [703.0, 93.0], [700.0, 95.875], [701.0, 185.75], [698.0, 93.9], [699.0, 135.0], [696.0, 171.33333333333334], [697.0, 192.75], [690.0, 2.0], [691.0, 141.22222222222223], [692.0, 69.22222222222223], [693.0, 271.1428571428571], [694.0, 196.71428571428572], [695.0, 201.62500000000003], [682.0, 361.8846153846154], [681.0, 24.799999999999997], [680.0, 0.33333333333333337], [683.0, 467.2857142857143], [710.0, 52.7], [705.0, 14.0], [704.0, 46.0], [718.0, 151.1111111111111], [719.0, 244.75], [716.0, 218.5], [717.0, 385.6], [714.0, 185.6], [715.0, 166.66666666666666], [706.0, 137.07142857142858], [707.0, 58.0], [708.0, 67.2], [709.0, 85.5], [711.0, 275.44444444444446], [728.0, 74.66666666666667], [729.0, 195.59090909090912], [730.0, 145.9090909090909], [731.0, 227.33333333333334], [732.0, 103.0], [733.0, 64.60000000000001], [735.0, 70.2], [734.0, 59.66666666666667], [720.0, 99.5], [721.0, 126.20000000000002], [722.0, 74.75], [723.0, 136.85714285714286], [724.0, 160.9090909090909], [725.0, 1.0], [727.0, 306.3333333333333], [726.0, 138.5], [712.0, 143.27272727272728], [713.0, 241.28571428571433], [741.0, 176.89999999999998], [737.0, 291.0], [736.0, 247.28571428571428], [750.0, 466.0], [751.0, 265.2], [748.0, 150.5], [749.0, 204.08333333333334], [738.0, 226.83333333333334], [739.0, 152.0], [740.0, 110.42857142857142], [752.0, 130.0], [767.0, 244.94444444444443], [765.0, 263.0], [766.0, 250.49999999999997], [763.0, 302.28571428571433], [764.0, 159.5], [760.0, 195.0], [761.0, 249.25], [753.0, 407.5], [754.0, 208.99999999999997], [755.0, 246.8], [757.0, 1.0], [758.0, 108.33333333333334], [744.0, 3.0], [745.0, 325.0], [746.0, 226.71428571428572], [747.0, 283.5], [775.0, 557.0], [770.0, 359.44444444444446], [768.0, 70.5], [769.0, 59.0], [783.0, 527.25], [781.0, 330.6], [780.0, 969.0], [782.0, 251.0], [771.0, 272.0], [772.0, 67.41999999999999], [774.0, 225.3548387096774], [773.0, 20.0], [785.0, 268.5], [798.0, 215.71428571428572], [799.0, 152.41666666666669], [795.0, 532.0], [796.0, 990.6666666666666], [797.0, 315.75], [793.0, 106.5], [794.0, 43.57142857142857], [786.0, 400.8], [787.0, 151.0], [788.0, 242.4], [789.0, 198.0], [790.0, 202.9333333333333], [791.0, 164.0], [776.0, 370.0], [777.0, 350.0], [778.0, 255.33333333333334], [779.0, 258.25], [803.0, 81.0], [800.0, 203.50000000000003], [814.0, 1.0], [815.0, 240.0], [812.0, 182.2], [813.0, 138.99999999999997], [810.0, 315.8571428571429], [811.0, 105.85714285714286], [801.0, 239.54545454545456], [802.0, 108.0], [804.0, 237.0], [805.0, 445.8], [806.0, 264.27272727272725], [807.0, 186.25], [816.0, 75.125], [830.0, 142.5], [831.0, 246.11111111111111], [828.0, 314.75], [829.0, 155.85], [826.0, 285.2857142857143], [827.0, 594.2], [824.0, 74.5], [825.0, 104.14285714285715], [817.0, 21.909090909090907], [818.0, 67.1], [819.0, 251.33333333333337], [820.0, 226.83333333333334], [821.0, 250.25000000000003], [822.0, 260.0], [823.0, 346.0], [808.0, 390.3333333333333], [809.0, 62.16666666666667], [839.0, 354.0], [835.0, 716.3749999999999], [832.0, 197.16666666666666], [846.0, 174.44444444444446], [847.0, 3.25], [844.0, 293.63157894736844], [845.0, 332.3333333333333], [833.0, 587.0], [834.0, 131.2], [836.0, 335.33333333333337], [837.0, 451.3333333333333], [838.0, 343.1666666666667], [848.0, 512.0], [862.0, 441.33333333333326], [863.0, 141.1], [860.0, 234.22222222222223], [861.0, 300.875], [858.0, 284.57142857142856], [859.0, 77.22222222222223], [856.0, 866.0], [857.0, 437.0], [849.0, 110.66666666666666], [851.0, 364.33333333333337], [850.0, 582.25], [852.0, 534.6666666666666], [853.0, 218.85714285714286], [854.0, 579.3333333333333], [855.0, 147.25], [840.0, 597.6666666666667], [842.0, 615.0], [841.0, 0.5], [843.0, 326.29411764705884], [867.0, 466.8333333333333], [864.0, 228.6], [878.0, 127.5], [879.0, 451.0], [876.0, 217.0], [877.0, 527.3333333333333], [874.0, 203.8], [875.0, 353.99999999999994], [865.0, 257.6923076923077], [866.0, 374.55555555555554], [868.0, 437.375], [869.0, 201.91304347826087], [870.0, 170.0], [871.0, 155.16666666666666], [880.0, 224.62068965517244], [895.0, 126.36363636363637], [893.0, 304.45454545454544], [894.0, 0.0], [890.0, 271.58620689655186], [891.0, 16.0], [892.0, 73.50000000000001], [888.0, 217.16666666666669], [889.0, 331.3333333333333], [881.0, 0.5], [882.0, 21.333333333333336], [883.0, 287.8], [884.0, 93.21428571428572], [885.0, 541.25], [886.0, 524.2857142857143], [887.0, 456.0], [872.0, 568.1333333333334], [873.0, 320.44444444444446], [902.0, 528.0], [898.0, 185.6470588235294], [897.0, 0.6666666666666666], [910.0, 190.00000000000006], [911.0, 0.33333333333333337], [908.0, 1.0], [909.0, 228.48780487804882], [906.0, 2.25], [907.0, 256.125], [899.0, 34.30769230769231], [900.0, 691.6666666666666], [901.0, 649.375], [903.0, 518.0], [920.0, 311.81250000000006], [921.0, 320.33333333333337], [922.0, 292.15384615384613], [925.0, 272.3333333333333], [924.0, 575.8000000000001], [923.0, 551.1666666666667], [926.0, 141.83333333333331], [927.0, 526.8148148148149], [912.0, 252.88888888888889], [914.0, 117.16666666666667], [913.0, 194.0], [915.0, 240.33333333333331], [916.0, 314.47826086956513], [917.0, 795.6666666666667], [918.0, 402.2], [904.0, 337.25], [905.0, 33.239999999999995], [933.0, 154.1], [929.0, 51.829787234042556], [928.0, 139.0], [943.0, 274.3478260869565], [941.0, 174.99999999999997], [942.0, 339.84], [939.0, 180.26666666666665], [940.0, 216.16666666666666], [930.0, 93.5], [931.0, 121.8], [932.0, 1.3333333333333335], [934.0, 193.96153846153848], [935.0, 128.0], [952.0, 626.4], [953.0, 864.8571428571429], [954.0, 215.04761904761904], [955.0, 334.79999999999995], [956.0, 278.5], [957.0, 213.5], [958.0, 233.99999999999997], [959.0, 216.49999999999997], [944.0, 352.76666666666665], [945.0, 472.6666666666667], [946.0, 352.0], [948.0, 444.45000000000005], [947.0, 190.0], [949.0, 1.0], [950.0, 604.35], [951.0, 696.2272727272726], [937.0, 247.54545454545453], [936.0, 60.14285714285714], [938.0, 126.0], [967.0, 128.22222222222223], [962.0, 496.66666666666663], [961.0, 392.5333333333333], [975.0, 410.0], [960.0, 536.4615384615386], [963.0, 377.18181818181824], [964.0, 171.25], [966.0, 0.0], [965.0, 230.66666666666666], [976.0, 801.4], [991.0, 665.2142857142857], [989.0, 398.53333333333336], [990.0, 946.6666666666667], [987.0, 285.40476190476187], [988.0, 783.6500000000001], [984.0, 281.39240506329105], [985.0, 277.0], [986.0, 646.0000000000001], [977.0, 338.6], [978.0, 464.25], [979.0, 336.0909090909091], [980.0, 0.0], [981.0, 354.94117647058823], [982.0, 303.7142857142857], [983.0, 223.72727272727275], [968.0, 96.36363636363636], [969.0, 0.4], [970.0, 258.6], [971.0, 1.0], [973.0, 38.54166666666667], [972.0, 343.00000000000006], [974.0, 175.8571428571429], [995.0, 549.5555555555555], [992.0, 171.44444444444446], [993.0, 418.0], [994.0, 209.66666666666669], [996.0, 151.3071895424837], [997.0, 386.0534979423866], [998.0, 358.5], [1000.0, 293.9432114882501], [999.0, 233.60937499999991]], "isOverall": false, "label": "Listar Pistas", "isController": false}, {"data": [[754.3413999999996, 358.99779999999924]], "isOverall": false, "label": "Listar Pistas-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 40058.666666666664, "minX": 1.75003236E12, "maxY": 406087.73333333334, "series": [{"data": [[1.75003236E12, 406087.73333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.75003236E12, 40058.666666666664]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75003236E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 358.99779999999924, "minX": 1.75003236E12, "maxY": 537.5532000000002, "series": [{"data": [[1.75003236E12, 537.5532000000002]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada", "isController": false}, {"data": [[1.75003236E12, 358.99779999999924]], "isOverall": false, "label": "Listar Pistas", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75003236E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 212.04069999999933, "minX": 1.75003236E12, "maxY": 303.33760000000194, "series": [{"data": [[1.75003236E12, 303.33760000000194]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada", "isController": false}, {"data": [[1.75003236E12, 212.04069999999933]], "isOverall": false, "label": "Listar Pistas", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75003236E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.8479000000000012, "minX": 1.75003236E12, "maxY": 1.0693000000000017, "series": [{"data": [[1.75003236E12, 1.0693000000000017]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada", "isController": false}, {"data": [[1.75003236E12, 0.8479000000000012]], "isOverall": false, "label": "Listar Pistas", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75003236E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.75003236E12, "maxY": 3096.0, "series": [{"data": [[1.75003236E12, 3096.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.75003236E12, 881.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.75003236E12, 1522.600000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.75003236E12, 1099.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.75003236E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.75003236E12, 144.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75003236E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 3.0, "maxY": 30013.0, "series": [{"data": [[548.0, 9.0], [737.0, 13.0], [781.0, 381.5], [792.0, 764.0], [3.0, 6.0], [48.0, 5.0], [821.0, 249.0], [842.0, 639.0], [938.0, 71.5], [60.0, 188.5], [980.0, 264.0], [984.0, 676.0], [964.0, 81.0], [1019.0, 705.0], [1015.0, 317.0], [1071.0, 552.0], [1055.0, 475.5], [1073.0, 886.0], [1038.0, 495.5], [1148.0, 146.0], [75.0, 5.0], [87.0, 6.0], [100.0, 9.0], [104.0, 12.0], [118.0, 5.0], [163.0, 5.0], [206.0, 29.0], [202.0, 13.0], [208.0, 10.0], [214.0, 8.0], [217.0, 12.0], [225.0, 8.0], [298.0, 6.0], [319.0, 247.0], [414.0, 131.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[548.0, 5.0], [169.0, 30013.0], [781.0, 19.0], [792.0, 2.0], [821.0, 71.0], [842.0, 28.0], [938.0, 10.5], [980.0, 8.0], [984.0, 33.0], [964.0, 16.0], [1019.0, 102.5], [1015.0, 104.5], [1071.0, 6.0], [1055.0, 31.0], [1073.0, 25.0], [1038.0, 6.0], [1148.0, 58.0], [319.0, 247.5], [87.0, 3.0], [414.0, 6.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1148.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 857.0, "series": [{"data": [[548.0, 9.0], [737.0, 13.0], [781.0, 370.0], [792.0, 748.0], [3.0, 6.0], [48.0, 5.0], [821.0, 239.0], [842.0, 629.5], [938.0, 71.0], [60.0, 184.5], [980.0, 251.0], [984.0, 665.0], [964.0, 74.0], [1019.0, 696.0], [1015.0, 315.0], [1071.0, 547.5], [1055.0, 466.0], [1073.0, 857.0], [1038.0, 489.0], [1148.0, 143.5], [75.0, 5.0], [87.0, 6.0], [100.0, 9.0], [104.0, 11.0], [118.0, 5.0], [163.0, 5.0], [206.0, 29.0], [202.0, 12.0], [208.0, 10.0], [214.0, 8.0], [217.0, 11.0], [225.0, 8.0], [298.0, 6.0], [319.0, 196.0], [414.0, 131.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[548.0, 2.5], [169.0, 0.0], [781.0, 0.0], [792.0, 0.0], [821.0, 71.0], [842.0, 0.0], [938.0, 0.0], [980.0, 0.0], [984.0, 0.0], [964.0, 0.0], [1019.0, 0.0], [1015.0, 104.5], [1071.0, 0.0], [1055.0, 0.0], [1073.0, 17.5], [1038.0, 0.0], [1148.0, 58.0], [319.0, 0.0], [87.0, 2.5], [414.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1148.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 333.3333333333333, "minX": 1.75003236E12, "maxY": 333.3333333333333, "series": [{"data": [[1.75003236E12, 333.3333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75003236E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.033333333333333, "minX": 1.75003236E12, "maxY": 194.78333333333333, "series": [{"data": [[1.75003236E12, 194.78333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.75003236E12, 59.9]], "isOverall": false, "label": "401", "isController": false}, {"data": [[1.75003236E12, 76.61666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.75003236E12, 2.033333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.75003236E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 61.15, "minX": 1.75003236E12, "maxY": 105.51666666666667, "series": [{"data": [[1.75003236E12, 61.15]], "isOverall": false, "label": "Listar Pistas-failure", "isController": false}, {"data": [[1.75003236E12, 77.4]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada-failure", "isController": false}, {"data": [[1.75003236E12, 89.26666666666667]], "isOverall": false, "label": "Obter Detalhes da Track Selecionada-success", "isController": false}, {"data": [[1.75003236E12, 105.51666666666667]], "isOverall": false, "label": "Listar Pistas-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75003236E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 138.55, "minX": 1.75003236E12, "maxY": 194.78333333333333, "series": [{"data": [[1.75003236E12, 194.78333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.75003236E12, 138.55]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.75003236E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

